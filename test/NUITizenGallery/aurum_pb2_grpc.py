# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import aurum_pb2 as aurum__pb2


class BootstrapStub(object):
    """*
    @page protocol Protocol
    Here is a page with some descriptions about protocol explained
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.killServer = channel.unary_unary(
                '/aurum.Bootstrap/killServer',
                request_serializer=aurum__pb2.ReqEmpty.SerializeToString,
                response_deserializer=aurum__pb2.RspEmpty.FromString,
                )
        self.findElement = channel.unary_unary(
                '/aurum.Bootstrap/findElement',
                request_serializer=aurum__pb2.ReqFindElement.SerializeToString,
                response_deserializer=aurum__pb2.RspFindElement.FromString,
                )
        self.getValue = channel.unary_unary(
                '/aurum.Bootstrap/getValue',
                request_serializer=aurum__pb2.ReqGetValue.SerializeToString,
                response_deserializer=aurum__pb2.RspGetValue.FromString,
                )
        self.setValue = channel.unary_unary(
                '/aurum.Bootstrap/setValue',
                request_serializer=aurum__pb2.ReqSetValue.SerializeToString,
                response_deserializer=aurum__pb2.RspSetValue.FromString,
                )
        self.getSize = channel.unary_unary(
                '/aurum.Bootstrap/getSize',
                request_serializer=aurum__pb2.ReqGetSize.SerializeToString,
                response_deserializer=aurum__pb2.RspGetSize.FromString,
                )
        self.clear = channel.unary_unary(
                '/aurum.Bootstrap/clear',
                request_serializer=aurum__pb2.ReqClear.SerializeToString,
                response_deserializer=aurum__pb2.RspClear.FromString,
                )
        self.getAttribute = channel.unary_unary(
                '/aurum.Bootstrap/getAttribute',
                request_serializer=aurum__pb2.ReqGetAttribute.SerializeToString,
                response_deserializer=aurum__pb2.RspGetAttribute.FromString,
                )
        self.click = channel.unary_unary(
                '/aurum.Bootstrap/click',
                request_serializer=aurum__pb2.ReqClick.SerializeToString,
                response_deserializer=aurum__pb2.RspClick.FromString,
                )
        self.longClick = channel.unary_unary(
                '/aurum.Bootstrap/longClick',
                request_serializer=aurum__pb2.ReqClick.SerializeToString,
                response_deserializer=aurum__pb2.RspClick.FromString,
                )
        self.flick = channel.unary_unary(
                '/aurum.Bootstrap/flick',
                request_serializer=aurum__pb2.ReqFlick.SerializeToString,
                response_deserializer=aurum__pb2.RspFlick.FromString,
                )
        self.touchDown = channel.unary_unary(
                '/aurum.Bootstrap/touchDown',
                request_serializer=aurum__pb2.ReqTouchDown.SerializeToString,
                response_deserializer=aurum__pb2.RspTouchDown.FromString,
                )
        self.touchMove = channel.unary_unary(
                '/aurum.Bootstrap/touchMove',
                request_serializer=aurum__pb2.ReqTouchMove.SerializeToString,
                response_deserializer=aurum__pb2.RspTouchMove.FromString,
                )
        self.touchUp = channel.unary_unary(
                '/aurum.Bootstrap/touchUp',
                request_serializer=aurum__pb2.ReqTouchUp.SerializeToString,
                response_deserializer=aurum__pb2.RspTouchUp.FromString,
                )
        self.installApp = channel.stream_unary(
                '/aurum.Bootstrap/installApp',
                request_serializer=aurum__pb2.ReqInstallApp.SerializeToString,
                response_deserializer=aurum__pb2.RspInstallApp.FromString,
                )
        self.removeApp = channel.unary_unary(
                '/aurum.Bootstrap/removeApp',
                request_serializer=aurum__pb2.ReqRemoveApp.SerializeToString,
                response_deserializer=aurum__pb2.RspRemoveApp.FromString,
                )
        self.getAppInfo = channel.unary_unary(
                '/aurum.Bootstrap/getAppInfo',
                request_serializer=aurum__pb2.ReqGetAppInfo.SerializeToString,
                response_deserializer=aurum__pb2.RspGetAppInfo.FromString,
                )
        self.launchApp = channel.unary_unary(
                '/aurum.Bootstrap/launchApp',
                request_serializer=aurum__pb2.ReqLaunchApp.SerializeToString,
                response_deserializer=aurum__pb2.RspLaunchApp.FromString,
                )
        self.closeApp = channel.unary_unary(
                '/aurum.Bootstrap/closeApp',
                request_serializer=aurum__pb2.ReqCloseApp.SerializeToString,
                response_deserializer=aurum__pb2.RspCloseApp.FromString,
                )
        self.getDeviceTime = channel.unary_unary(
                '/aurum.Bootstrap/getDeviceTime',
                request_serializer=aurum__pb2.ReqGetDeviceTime.SerializeToString,
                response_deserializer=aurum__pb2.RspGetDeviceTime.FromString,
                )
        self.getLocation = channel.unary_unary(
                '/aurum.Bootstrap/getLocation',
                request_serializer=aurum__pb2.ReqGetLocation.SerializeToString,
                response_deserializer=aurum__pb2.RspGetLocation.FromString,
                )
        self.sendKey = channel.unary_unary(
                '/aurum.Bootstrap/sendKey',
                request_serializer=aurum__pb2.ReqKey.SerializeToString,
                response_deserializer=aurum__pb2.RspKey.FromString,
                )
        self.takeScreenshot = channel.unary_stream(
                '/aurum.Bootstrap/takeScreenshot',
                request_serializer=aurum__pb2.ReqTakeScreenshot.SerializeToString,
                response_deserializer=aurum__pb2.RspTakeScreenshot.FromString,
                )
        self.dumpObjectTree = channel.unary_unary(
                '/aurum.Bootstrap/dumpObjectTree',
                request_serializer=aurum__pb2.ReqDumpObjectTree.SerializeToString,
                response_deserializer=aurum__pb2.RspDumpObjectTree.FromString,
                )
        self.getScreenSize = channel.unary_unary(
                '/aurum.Bootstrap/getScreenSize',
                request_serializer=aurum__pb2.ReqGetScreenSize.SerializeToString,
                response_deserializer=aurum__pb2.RspGetScreenSize.FromString,
                )
        self.actionAndWaitEvent = channel.unary_unary(
                '/aurum.Bootstrap/actionAndWaitEvent',
                request_serializer=aurum__pb2.ReqActionAndWaitEvent.SerializeToString,
                response_deserializer=aurum__pb2.RspActionAndWaitEvent.FromString,
                )
        self.setFocus = channel.unary_unary(
                '/aurum.Bootstrap/setFocus',
                request_serializer=aurum__pb2.ReqSetFocus.SerializeToString,
                response_deserializer=aurum__pb2.RspSetFocus.FromString,
                )
        self.findElements = channel.unary_unary(
                '/aurum.Bootstrap/findElements',
                request_serializer=aurum__pb2.ReqFindElements.SerializeToString,
                response_deserializer=aurum__pb2.RspFindElements.FromString,
                )


class BootstrapServicer(object):
    """*
    @page protocol Protocol
    Here is a page with some descriptions about protocol explained
    """

    def killServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findElement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clear(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAttribute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def click(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def longClick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def touchDown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def touchMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def touchUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def installApp(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAppInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def launchApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def closeApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDeviceTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def takeScreenshot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dumpObjectTree(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getScreenSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def actionAndWaitEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setFocus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findElements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BootstrapServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'killServer': grpc.unary_unary_rpc_method_handler(
                    servicer.killServer,
                    request_deserializer=aurum__pb2.ReqEmpty.FromString,
                    response_serializer=aurum__pb2.RspEmpty.SerializeToString,
            ),
            'findElement': grpc.unary_unary_rpc_method_handler(
                    servicer.findElement,
                    request_deserializer=aurum__pb2.ReqFindElement.FromString,
                    response_serializer=aurum__pb2.RspFindElement.SerializeToString,
            ),
            'getValue': grpc.unary_unary_rpc_method_handler(
                    servicer.getValue,
                    request_deserializer=aurum__pb2.ReqGetValue.FromString,
                    response_serializer=aurum__pb2.RspGetValue.SerializeToString,
            ),
            'setValue': grpc.unary_unary_rpc_method_handler(
                    servicer.setValue,
                    request_deserializer=aurum__pb2.ReqSetValue.FromString,
                    response_serializer=aurum__pb2.RspSetValue.SerializeToString,
            ),
            'getSize': grpc.unary_unary_rpc_method_handler(
                    servicer.getSize,
                    request_deserializer=aurum__pb2.ReqGetSize.FromString,
                    response_serializer=aurum__pb2.RspGetSize.SerializeToString,
            ),
            'clear': grpc.unary_unary_rpc_method_handler(
                    servicer.clear,
                    request_deserializer=aurum__pb2.ReqClear.FromString,
                    response_serializer=aurum__pb2.RspClear.SerializeToString,
            ),
            'getAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.getAttribute,
                    request_deserializer=aurum__pb2.ReqGetAttribute.FromString,
                    response_serializer=aurum__pb2.RspGetAttribute.SerializeToString,
            ),
            'click': grpc.unary_unary_rpc_method_handler(
                    servicer.click,
                    request_deserializer=aurum__pb2.ReqClick.FromString,
                    response_serializer=aurum__pb2.RspClick.SerializeToString,
            ),
            'longClick': grpc.unary_unary_rpc_method_handler(
                    servicer.longClick,
                    request_deserializer=aurum__pb2.ReqClick.FromString,
                    response_serializer=aurum__pb2.RspClick.SerializeToString,
            ),
            'flick': grpc.unary_unary_rpc_method_handler(
                    servicer.flick,
                    request_deserializer=aurum__pb2.ReqFlick.FromString,
                    response_serializer=aurum__pb2.RspFlick.SerializeToString,
            ),
            'touchDown': grpc.unary_unary_rpc_method_handler(
                    servicer.touchDown,
                    request_deserializer=aurum__pb2.ReqTouchDown.FromString,
                    response_serializer=aurum__pb2.RspTouchDown.SerializeToString,
            ),
            'touchMove': grpc.unary_unary_rpc_method_handler(
                    servicer.touchMove,
                    request_deserializer=aurum__pb2.ReqTouchMove.FromString,
                    response_serializer=aurum__pb2.RspTouchMove.SerializeToString,
            ),
            'touchUp': grpc.unary_unary_rpc_method_handler(
                    servicer.touchUp,
                    request_deserializer=aurum__pb2.ReqTouchUp.FromString,
                    response_serializer=aurum__pb2.RspTouchUp.SerializeToString,
            ),
            'installApp': grpc.stream_unary_rpc_method_handler(
                    servicer.installApp,
                    request_deserializer=aurum__pb2.ReqInstallApp.FromString,
                    response_serializer=aurum__pb2.RspInstallApp.SerializeToString,
            ),
            'removeApp': grpc.unary_unary_rpc_method_handler(
                    servicer.removeApp,
                    request_deserializer=aurum__pb2.ReqRemoveApp.FromString,
                    response_serializer=aurum__pb2.RspRemoveApp.SerializeToString,
            ),
            'getAppInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getAppInfo,
                    request_deserializer=aurum__pb2.ReqGetAppInfo.FromString,
                    response_serializer=aurum__pb2.RspGetAppInfo.SerializeToString,
            ),
            'launchApp': grpc.unary_unary_rpc_method_handler(
                    servicer.launchApp,
                    request_deserializer=aurum__pb2.ReqLaunchApp.FromString,
                    response_serializer=aurum__pb2.RspLaunchApp.SerializeToString,
            ),
            'closeApp': grpc.unary_unary_rpc_method_handler(
                    servicer.closeApp,
                    request_deserializer=aurum__pb2.ReqCloseApp.FromString,
                    response_serializer=aurum__pb2.RspCloseApp.SerializeToString,
            ),
            'getDeviceTime': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeviceTime,
                    request_deserializer=aurum__pb2.ReqGetDeviceTime.FromString,
                    response_serializer=aurum__pb2.RspGetDeviceTime.SerializeToString,
            ),
            'getLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.getLocation,
                    request_deserializer=aurum__pb2.ReqGetLocation.FromString,
                    response_serializer=aurum__pb2.RspGetLocation.SerializeToString,
            ),
            'sendKey': grpc.unary_unary_rpc_method_handler(
                    servicer.sendKey,
                    request_deserializer=aurum__pb2.ReqKey.FromString,
                    response_serializer=aurum__pb2.RspKey.SerializeToString,
            ),
            'takeScreenshot': grpc.unary_stream_rpc_method_handler(
                    servicer.takeScreenshot,
                    request_deserializer=aurum__pb2.ReqTakeScreenshot.FromString,
                    response_serializer=aurum__pb2.RspTakeScreenshot.SerializeToString,
            ),
            'dumpObjectTree': grpc.unary_unary_rpc_method_handler(
                    servicer.dumpObjectTree,
                    request_deserializer=aurum__pb2.ReqDumpObjectTree.FromString,
                    response_serializer=aurum__pb2.RspDumpObjectTree.SerializeToString,
            ),
            'getScreenSize': grpc.unary_unary_rpc_method_handler(
                    servicer.getScreenSize,
                    request_deserializer=aurum__pb2.ReqGetScreenSize.FromString,
                    response_serializer=aurum__pb2.RspGetScreenSize.SerializeToString,
            ),
            'actionAndWaitEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.actionAndWaitEvent,
                    request_deserializer=aurum__pb2.ReqActionAndWaitEvent.FromString,
                    response_serializer=aurum__pb2.RspActionAndWaitEvent.SerializeToString,
            ),
            'setFocus': grpc.unary_unary_rpc_method_handler(
                    servicer.setFocus,
                    request_deserializer=aurum__pb2.ReqSetFocus.FromString,
                    response_serializer=aurum__pb2.RspSetFocus.SerializeToString,
            ),
            'findElements': grpc.unary_unary_rpc_method_handler(
                    servicer.findElements,
                    request_deserializer=aurum__pb2.ReqFindElements.FromString,
                    response_serializer=aurum__pb2.RspFindElements.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aurum.Bootstrap', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bootstrap(object):
    """*
    @page protocol Protocol
    Here is a page with some descriptions about protocol explained
    """

    @staticmethod
    def killServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/killServer',
            aurum__pb2.ReqEmpty.SerializeToString,
            aurum__pb2.RspEmpty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findElement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/findElement',
            aurum__pb2.ReqFindElement.SerializeToString,
            aurum__pb2.RspFindElement.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getValue',
            aurum__pb2.ReqGetValue.SerializeToString,
            aurum__pb2.RspGetValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/setValue',
            aurum__pb2.ReqSetValue.SerializeToString,
            aurum__pb2.RspSetValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getSize',
            aurum__pb2.ReqGetSize.SerializeToString,
            aurum__pb2.RspGetSize.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/clear',
            aurum__pb2.ReqClear.SerializeToString,
            aurum__pb2.RspClear.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getAttribute',
            aurum__pb2.ReqGetAttribute.SerializeToString,
            aurum__pb2.RspGetAttribute.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def click(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/click',
            aurum__pb2.ReqClick.SerializeToString,
            aurum__pb2.RspClick.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def longClick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/longClick',
            aurum__pb2.ReqClick.SerializeToString,
            aurum__pb2.RspClick.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/flick',
            aurum__pb2.ReqFlick.SerializeToString,
            aurum__pb2.RspFlick.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def touchDown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/touchDown',
            aurum__pb2.ReqTouchDown.SerializeToString,
            aurum__pb2.RspTouchDown.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def touchMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/touchMove',
            aurum__pb2.ReqTouchMove.SerializeToString,
            aurum__pb2.RspTouchMove.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def touchUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/touchUp',
            aurum__pb2.ReqTouchUp.SerializeToString,
            aurum__pb2.RspTouchUp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def installApp(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/aurum.Bootstrap/installApp',
            aurum__pb2.ReqInstallApp.SerializeToString,
            aurum__pb2.RspInstallApp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def removeApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/removeApp',
            aurum__pb2.ReqRemoveApp.SerializeToString,
            aurum__pb2.RspRemoveApp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAppInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getAppInfo',
            aurum__pb2.ReqGetAppInfo.SerializeToString,
            aurum__pb2.RspGetAppInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def launchApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/launchApp',
            aurum__pb2.ReqLaunchApp.SerializeToString,
            aurum__pb2.RspLaunchApp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def closeApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/closeApp',
            aurum__pb2.ReqCloseApp.SerializeToString,
            aurum__pb2.RspCloseApp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDeviceTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getDeviceTime',
            aurum__pb2.ReqGetDeviceTime.SerializeToString,
            aurum__pb2.RspGetDeviceTime.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getLocation',
            aurum__pb2.ReqGetLocation.SerializeToString,
            aurum__pb2.RspGetLocation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/sendKey',
            aurum__pb2.ReqKey.SerializeToString,
            aurum__pb2.RspKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def takeScreenshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/aurum.Bootstrap/takeScreenshot',
            aurum__pb2.ReqTakeScreenshot.SerializeToString,
            aurum__pb2.RspTakeScreenshot.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dumpObjectTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/dumpObjectTree',
            aurum__pb2.ReqDumpObjectTree.SerializeToString,
            aurum__pb2.RspDumpObjectTree.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getScreenSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/getScreenSize',
            aurum__pb2.ReqGetScreenSize.SerializeToString,
            aurum__pb2.RspGetScreenSize.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def actionAndWaitEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/actionAndWaitEvent',
            aurum__pb2.ReqActionAndWaitEvent.SerializeToString,
            aurum__pb2.RspActionAndWaitEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setFocus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/setFocus',
            aurum__pb2.ReqSetFocus.SerializeToString,
            aurum__pb2.RspSetFocus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findElements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aurum.Bootstrap/findElements',
            aurum__pb2.ReqFindElements.SerializeToString,
            aurum__pb2.RspFindElements.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
